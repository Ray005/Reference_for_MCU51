C51 COMPILER V9.01   MAIN                                                                  01/07/2021 18:31:30 PAGE 1   


C51 COMPILER V9.01, COMPILATION OF MODULE MAIN
OBJECT MODULE PLACED IN main.OBJ
COMPILER INVOKED BY: D:\Keil_v5\C51\BIN\C51.EXE main.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND PRINT(.\Listings\main
                    -.lst) TABS(2)

line level    source

   1          #include "reg52.h"       //此文件中定义了单片机的一些特殊功能寄存器
   2          
   3          typedef unsigned int u16;   //对数据类型进行声明定义
   4          typedef unsigned char u8;
   5          
   6          #define GPIO_DIG P0
   7          #define GPIO_KEY P1
   8          
   9          sbit LSA=P2^2;
  10          sbit LSB=P2^3;
  11          sbit LSC=P2^4;
  12          sbit LED_const = P2^1;
  13          
  14          
  15          u8 KeyValue;  //用来存放读取到的键值
  16          
  17          
  18          u8 code smgduan[17]={0xc0,0xf9,0xa4,0xb0,0x99,0x92,0x82,0xf8,
  19                    0x80,0x90,0x88,0x83,0xc6,0xa1,0x86,0x8e};//显示0~F的值
  20          
  21          
  22          void Delay1ms()   //@11.0592MHz
  23          {
  24   1        unsigned char i, j;
  25   1      
  26   1        //_nop_();
  27   1        i = 2;
  28   1        j = 199;
  29   1        do
  30   1        {
  31   2          while (--j);
  32   2        } while (--i);
  33   1      }
  34          
  35          void Delay10us()    //@11.0592MHz
  36          {
  37   1        unsigned char i;
  38   1      
  39   1        i = 2;
  40   1        while (--i);
  41   1      }
  42          
  43          void delayus(long x){
  44   1      int i;
  45   1        for(i = 0; i < x/10; i++){
  46   2        Delay10us();
  47   2        }
  48   1      }
  49          
  50          void delay(long x){
  51   1        int i;
  52   1        for(i = 0; i < x ; i++){
  53   2        Delay1ms();
  54   2        } 
C51 COMPILER V9.01   MAIN                                                                  01/07/2021 18:31:30 PAGE 2   

  55   1      }
  56          
  57          
  58          u8 KeyDown(void)
  59          {
  60   1        char a=0;
  61   1        GPIO_KEY=0x0f;
  62   1        if(GPIO_KEY!=0x0f)//读取按键是否按下
  63   1        {
  64   2          delay(1);//延时10ms进行消抖
  65   2          if(GPIO_KEY!=0x0f)//再次检测键盘是否按下
  66   2          { 
  67   3            //测试列
  68   3            GPIO_KEY=0X0F;
  69   3            switch(GPIO_KEY)
  70   3            {
  71   4              case(0X07): KeyValue=0;break;//得到在哪一列，得到的列偏移量，在得到行后，加上这个偏移量即可
  72   4              case(0X0b): KeyValue=1;break;
  73   4              case(0X0d): KeyValue=2;break;
  74   4              case(0X0e): KeyValue=3;break;
  75   4            }
  76   3            //测试行
  77   3            GPIO_KEY=0XF0;
  78   3            switch(GPIO_KEY)
  79   3            {
  80   4              case(0X70): KeyValue=KeyValue;break;  //在第一行，就是偏置本身
  81   4              case(0Xb0): KeyValue=KeyValue+4;break;//在第二行，4开始加上列偏置
  82   4              case(0Xd0): KeyValue=KeyValue+8;break;//在第三行，8开始加上列偏置
  83   4              case(0Xe0): KeyValue=KeyValue+12;break;//在第四行，12开始加上列偏置
  84   4            }
  85   3            
  86   3          }
  87   2        }
  88   1        /*while((a<50)&&(GPIO_KEY!=0xf0))  //检测按键松手检测
  89   1        {
  90   1          delay(10);
  91   1          a++;
  92   1        }*/
  93   1        return KeyValue;
  94   1      }
  95          void weixuan(int i){
  96   1      switch(i)  //位选，选择点亮的数码管，
  97   1          {
  98   2            case(0):
  99   2              LSA=1;LSB=1;LSC=1; break;//显示第7位
 100   2            case(1):
 101   2              LSA=0;LSB=1;LSC=1; break;//显示第6位
 102   2            case(2):
 103   2              LSA=1;LSB=0;LSC=1; break;//显示第5位
 104   2            case(3):
 105   2              LSA=0;LSB=0;LSC=1; break;//显示第4位
 106   2            case(4):
 107   2              LSA=1;LSB=1;LSC=0; break;//显示第3位 
 108   2            case(5):
 109   2              LSA=0;LSB=1;LSC=0; break;//显示第2位 
 110   2            case(6):
 111   2              LSA=1;LSB=0;LSC=0; break;//显示第1位 
 112   2            case(7):
 113   2              LSA=0;LSB=0;LSC=0; break;//显示第0位  
 114   2          }
 115   1        }
 116          
C51 COMPILER V9.01   MAIN                                                                  01/07/2021 18:31:30 PAGE 3   

 117          void main()
 118          { 
 119   1        int k;
 120   1        int a = 0;
 121   1        //LED_const = 1;
 122   1        while(1)
 123   1        { 
 124   2          k = KeyDown();       //按键判断函数
 125   2          
 126   2          weixuan(0);
 127   2          GPIO_DIG=0x6d;    //在第0位显示字母S
 128   2          delay(2);
 129   2          weixuan(1);
 130   2          GPIO_DIG=0x73;    //在第0位显示字母P
 131   2          delay(2);
 132   2          weixuan(2);
 133   2          GPIO_DIG=0x79;    //在第0位显示字母E
 134   2          delay(2);
 135   2          weixuan(3);
 136   2          GPIO_DIG=0x79;    //在第0位显示字母E
 137   2          delay(2);
 138   2          weixuan(4);
 139   2          GPIO_DIG=~smgduan[13];    //在第0位显示字母d
 140   2          delay(2);
 141   2          if(k<10){               //在小于10的时候，在第3位显示按键序号数字
 142   3          weixuan(7);
 143   3          GPIO_DIG=~smgduan[k];   
 144   3          delay(2);
 145   3          }
 146   2          
 147   2          if(k>=10){
 148   3          weixuan(6);
 149   3          GPIO_DIG=~smgduan[1];   
 150   3          delay(2);
 151   3            
 152   3          weixuan(7);
 153   3          GPIO_DIG=~smgduan[k-10];    
 154   3          delay(1);
 155   3          }
 156   2      
 157   2            P2 = P2 & 0x1C | 0x00;        //熄灭LED  
 158   2            delayus((k)*5);
 159   2      
 160   2            P2 = P2 & 0x1C | 0xE3;        //点亮LED
 161   2            delayus((16-k)*5);
 162   2        }   
 163   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    543    ----
   CONSTANT SIZE    =     17    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =      1      15
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
